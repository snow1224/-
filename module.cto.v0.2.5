/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A business network for shipping perishable goods
 * The cargo is temperature controlled and contracts
 * can be negociated based on the temperature
 * readings received for the cargo
 */

namespace org.example.empty
 
/**
 * The type of perishable product being shipped
 */
enum Attend_status {
  o ATTEND
  o LATE
  o ABSENCE   // default
}

/**
 * The status of a Course
 */
enum Course_status {
  o PASS
  o FAIL
}

/**
 * A Course being tracked as an asset on the ledger
 */
 concept unit{
  o String course_id
  o String course_name
  o Course_status status
  o Long time_count
  o String course_date
  o String course_time
  o Integer credit
  o String[] teachers
  o String[] accepts
  o String[] students_id
  o String introduce
  o Integer max_student
  o Integer current_student
  o Integer score   optional
 }
asset Course identified by course_id {
  o String course_id 
  o String course_name
  o Course_status status
  o Long time_count
  o String course_date
  o String course_time
  o Integer credit
  o String[] teachers
  o String[] accepts
  o String introduce
  o Integer max_student
  o Integer current_student
  o Integer score   optional  // mean??
  o Course[] unit_course  optional
  o Integer avg_score  optional
  o Student[] student  
  o String father_course optional
}

concept score_table{
  o String course_id //大課程id
  o Integer score //加權後分數
}

concept Dic{
  o String key
  o String val
}

/**
 * A Student is a type of participant in the network
 */
participant Student identified by student_id {
  o String student_id
  o String student_name
  o String student_class
  o String[] course_list
  o Integer unit_score  // 因為每個微課程中都需要分數
  o Attend_status status
  o score_table[] score optional
  o String[] father_course optional
}

concept Student_set{
  o String student_id
  o Integer score
  o Attend_status attend_status
}
/**
 * A Shipper is a type of participant in the network
 */
participant Teacher identified by teacher_id {
  o String teacher_id
  o String teacher_email
  o String teacher_name
  o String[] teach
  --> Student[] student_list
  o Student_set[] student_status
}
/**
  CourseCenter */
participant Course_center identified by cc_id{
  o String cc_id
  o String cc_name   // 行政人員名字
  --> Teacher teacher
}

/**
 * JUST FOR INITIALIZING A DEMO
 */
transaction tr_Input_score {
  --> Teacher teacher   //  只有該課老師才可以打分數，似乎要寫ACL
  --> Student student
}

transaction tr_Caculcate_attend{
  --> Teacher teacher
  --> Course course
  o String student_id
  o String unit_course_id
  o Attend_status status
}

transaction tr_Modify_attend{
  --> Teacher teacher
  --> Course course
  o String student_id
  o String unit_course_id
  o Attend_status status
}

transaction stu_Select_course{
  o String course_id
  --> Student student
  --> Course course_list
}

transaction stu_delete_unit{
  o String[] unit_id
  o String student_id
  --> Student student
  --> Course course_list
}

transaction cc_Add_course{
  o String course_id
  o String course_name
  o Course_status status
  o Long time_count
  o String course_date
  o String course_time
  o Integer credit
  o String introduce
  o Integer max_student
  o Integer current_student
  o String[] teachers
  o String[] accepts
  --> Course_center course_center
}

transaction cc_Add_unit_course{
  o String course_id
  o String course_name
  o Course_status status
  o Long time_count
  o String course_date
  o String course_time
  o Integer credit
  o String introduce
  o Integer max_student
  o Integer current_student
  o String[] teachers
  o String[] accepts
  --> Course_center course_center
  --> Course course
}
transaction tr_Modify_score {
  o Integer score
  o String unit_course_id
  o String student_id
  --> Student student
  --> Teacher teacher   //  只有該課老師才可以打分數，似乎要寫ACL
  --> Course course
}

concept teacher_object{
  o String teacher_id
  o String teacher_email
  o String teacher_name
  o String[] teach
  --> Student[] student_list
  o Student_set[] student_status
}

transaction cc_Add_teacher {
  o teacher_object[] teachers
}

concept student_object{
  o String student_id
  o String student_name
  o String student_class
}

transaction cc_Add_student {
  o student_object[] students
}

concept cc_object{
  o String cc_id
  o String cc_name   // 行政人員名字
  --> Teacher teacher
}

transaction cc_Add_cc {
  o cc_object[] ccs
}

transaction stu_settlement_credit{
  o String[] list
  --> Student student
  --> Course course
}
